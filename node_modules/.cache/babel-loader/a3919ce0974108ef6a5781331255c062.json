{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piete\\\\OneDrive\\\\Desktop\\\\final-project\\\\src\\\\components\\\\LineChart.js\",\n    _s = $RefreshSig$();\n\n// import React, {useState,useEffect} from 'react';\n// import {Line} from 'react-chartjs-2';\n// const LineChart = () =>{\n//     const [apiValue, setApiValue] = useState([]);\n//     useEffect(() =>{\n//         async function loadData(){\n//             const response = await fetch(\"https://api.pokemontcg.io/v2/cards?q=name:ditto\");\n//             const data = await response.json();\n//             const item = data.data;\n//            setApiValue(item);  \n//         }\n//         loadData();\n//     }, []);\n//     console.log(apiValue);\n//     const levels = apiValue.filter((v) => v.level);\n//     console.log(levels);\n//     const [chartData, setChartData] = useState();\n//     const chart = () =>{\n//         setChartData({\n//             labels:['Low', 'Mid', 'High', 'Market'],\n//             datasets:[{\n//                 label:'Holofoil Price',\n//                 data:[levels],\n//                 fill: true,\n//                 backgroundColor:['rgba(179, 0, 0,0.2)'],\n//                 borderColor:['rgb(179, 0, 0)'],\n//                 borderWidth: 2, \n//                 tension: 0.1\n//             },{\n//                 label:'new card',\n//                 data:[50,80,20,60],\n//                 fill: true,\n//                 backgroundColor:['rgba(199, 50, 150,0.2)'],\n//                 borderColor:['rgb(199, 50, 150)'],\n//                 borderWidth: 2, \n//                 tension: 0.1\n//             }]\n//         });\n//     }\n//     useEffect(() =>{\n//         chart();\n//     },[]);\n//         return(\n//             <div className='containerChart'><h1 style={{textAlign:'center', marginTop:'-15px'}}>Levels Comparison</h1><br></br>\n//             <h1 style={{textAlign:'center', marginTop:'-35px',fontSize:'16px', fontWeight:'200'}}>-Compare Pokemon Level-</h1>\n//         <div style={{height:'500px', width:'500px', float:'left'}}  className='Prices'>\n//            <Line data={chartData}  options={{\n//                responsive:true,\n//            }}/>\n//         </div>\n//         </div>\n//     );\n// }\n// export default LineChart;\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LineChart = () => {\n  _s();\n\n  const [apiValue, setApiValue] = useState([]);\n  useEffect(() => {\n    async function loadData() {\n      const response = await fetch(\"https://api.spacexdata.com/v4/launches/past\");\n      const data = await response.json();\n      const item = data;\n      setApiValue(item);\n    }\n\n    loadData();\n  }, []);\n  console.log(apiValue);\n  const success = apiValue.filter(v => v.success);\n  const failure = apiValue.filter(v => !v.success);\n  const chartSuccess = success.length;\n  const chartFail = failure.length;\n  console.log(chartFail);\n  console.log(chartSuccess);\n  const chartData = {\n    labels: [\"Fail\", \"Success\"],\n    datasets: [{\n      label: \"Mission Success v Failure\",\n      data: [chartFail, chartSuccess],\n      backgroundColor: ['rgba(75,192,192,0.6)', 'rgba(255,192,192,0.6)'],\n      borderWidth: 4\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart_item\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LineChart, \"Pt/RmcpNciFx1kd7RTfn3Qoplx8=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["C:/Users/piete/OneDrive/Desktop/final-project/src/components/LineChart.js"],"names":["React","useState","useEffect","Line","LineChart","apiValue","setApiValue","loadData","response","fetch","data","json","item","console","log","success","filter","v","failure","chartSuccess","length","chartFail","chartData","labels","datasets","label","backgroundColor","borderWidth"],"mappings":";;;AAAA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACf,mBAAeK,QAAf,GAAyB;AACrB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAMC,IAAI,GAAGF,IAAb;AACDJ,MAAAA,WAAW,CAACM,IAAD,CAAX;AACF;;AAEDL,IAAAA,QAAQ;AACP,GATQ,EASN,EATM,CAAT;AAWAM,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AAEA,QAAMU,OAAO,GAAGV,QAAQ,CAACW,MAAT,CAAiBC,CAAD,IAAOA,CAAC,CAACF,OAAzB,CAAhB;AACA,QAAMG,OAAO,GAAGb,QAAQ,CAACW,MAAT,CAAiBC,CAAD,IAAO,CAACA,CAAC,CAACF,OAA1B,CAAhB;AAEA,QAAMI,YAAY,GAAGJ,OAAO,CAACK,MAA7B;AACA,QAAMC,SAAS,GAAGH,OAAO,CAACE,MAA1B;AAEAP,EAAAA,OAAO,CAACC,GAAR,CAAYO,SAAZ;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;AAEA,QAAMG,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,SAAT,CADM;AAEdC,IAAAA,QAAQ,EAAE,CAAC;AACPC,MAAAA,KAAK,EAAE,2BADA;AAEPf,MAAAA,IAAI,EAAE,CAACW,SAAD,EAAWF,YAAX,CAFC;AAGPO,MAAAA,eAAe,EAAE,CAAC,sBAAD,EAAwB,uBAAxB,CAHV;AAIPC,MAAAA,WAAW,EAAE;AAJN,KAAD;AAFI,GAAlB;AAUJ,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEL;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMC,CA1CD;;GAAMlB,S;;KAAAA,S;AA4CN,eAAeA,SAAf","sourcesContent":["// import React, {useState,useEffect} from 'react';\r\n// import {Line} from 'react-chartjs-2';\r\n\r\n\r\n// const LineChart = () =>{\r\n\r\n//     const [apiValue, setApiValue] = useState([]);\r\n\r\n//     useEffect(() =>{\r\n//         async function loadData(){\r\n//             const response = await fetch(\"https://api.pokemontcg.io/v2/cards?q=name:ditto\");\r\n//             const data = await response.json();\r\n//             const item = data.data;\r\n//            setApiValue(item);  \r\n//         }\r\n//         loadData();\r\n//     }, []);\r\n//     console.log(apiValue);\r\n//     const levels = apiValue.filter((v) => v.level);\r\n//     console.log(levels);\r\n//     const [chartData, setChartData] = useState();\r\n\r\n//     const chart = () =>{\r\n//         setChartData({\r\n//             labels:['Low', 'Mid', 'High', 'Market'],\r\n//             datasets:[{\r\n//                 label:'Holofoil Price',\r\n//                 data:[levels],\r\n//                 fill: true,\r\n//                 backgroundColor:['rgba(179, 0, 0,0.2)'],\r\n//                 borderColor:['rgb(179, 0, 0)'],\r\n//                 borderWidth: 2, \r\n//                 tension: 0.1\r\n//             },{\r\n                \r\n//                 label:'new card',\r\n//                 data:[50,80,20,60],\r\n//                 fill: true,\r\n//                 backgroundColor:['rgba(199, 50, 150,0.2)'],\r\n//                 borderColor:['rgb(199, 50, 150)'],\r\n//                 borderWidth: 2, \r\n//                 tension: 0.1\r\n//             }]\r\n\r\n\r\n//         });\r\n//     }\r\n\r\n//     useEffect(() =>{\r\n//         chart();\r\n//     },[]);\r\n\r\n//         return(\r\n//             <div className='containerChart'><h1 style={{textAlign:'center', marginTop:'-15px'}}>Levels Comparison</h1><br></br>\r\n//             <h1 style={{textAlign:'center', marginTop:'-35px',fontSize:'16px', fontWeight:'200'}}>-Compare Pokemon Level-</h1>\r\n//         <div style={{height:'500px', width:'500px', float:'left'}}  className='Prices'>\r\n//            <Line data={chartData}  options={{\r\n//                responsive:true,\r\n//            }}/>\r\n//         </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default LineChart;\r\n\r\n\r\n\r\n\r\nimport React, {useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = () => {\r\n\r\n    const [apiValue, setApiValue] = useState([]);\r\n\r\n    useEffect(() =>{\r\n    async function loadData(){\r\n        const response = await fetch(\"https://api.spacexdata.com/v4/launches/past\");\r\n        const data = await response.json();\r\n        const item = data;\r\n       setApiValue(item);  \r\n    }\r\n\r\n    loadData();\r\n    }, []);\r\n\r\n    console.log(apiValue);\r\n\r\n    const success = apiValue.filter((v) => v.success);\r\n    const failure = apiValue.filter((v) => !v.success);\r\n\r\n    const chartSuccess = success.length;\r\n    const chartFail = failure.length;\r\n\r\n    console.log(chartFail);\r\n    console.log(chartSuccess);\r\n\r\n    const chartData = {\r\n        labels: [\"Fail\", \"Success\"],\r\n        datasets: [{\r\n            label: \"Mission Success v Failure\", \r\n            data: [chartFail,chartSuccess],\r\n            backgroundColor: ['rgba(75,192,192,0.6)','rgba(255,192,192,0.6)' ],\r\n            borderWidth: 4,\r\n        }]\r\n    };\r\n\r\nreturn(\r\n    <div className=\"chart_item\">\r\n        <Line data={chartData} />\r\n    </div>\r\n);\r\n\r\n}\r\n\r\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}